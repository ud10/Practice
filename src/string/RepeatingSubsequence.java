package string;

public class RepeatingSubsequence {
	/*
	 * Given a string, find if there is any sub-sequence that repeats itself. A sub-sequence of a string is defined 
	 * as a sequence of characters generated by deleting some characters in the string without changing the order of 
	 * the remaining characters.
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	public int anytwo(String a) {
		int n = a.length();
		int[][] dp = new int[n+1][n+1];
		for(int i =0; i<=n;i++){
			for(int j =0;j<=n;j++){
				dp[i][j] = 0;
			}
		}
		for(int i = 1; i<=n;i++){
			for(int j = 1;j<=n;j++){
				if(a.charAt(i-1) == a.charAt(j-1) && i!=j)
					dp[i][j] = dp[i-1][j-1] + 1;
				else
					dp[i][j] = Math.max(dp[i][j-1], dp[i-1][j]); 
			}
		}
		if(dp[n][n] > 1)
			return 1;
		else 
			return 0;
	}
}
